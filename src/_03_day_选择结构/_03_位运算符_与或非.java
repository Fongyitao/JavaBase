package _03_day_选择结构;

public class _03_位运算符_与或非 {
    public static void main(String[] args) {
        /**
         * * A:位运算符有哪些
         * &,|,^,~ ,>>,>>>,<<

         * 位运算符的基本用法1
         * &,|,^,~ 的用法
         * &:有0则0
         * |:有1则1
         * ^:相同则0，不同则1
         * ~:按位取反
         */

        System.out.println(6 & 3);// 2
		/*
		   110		6
		 & 011		3
		----------
		   010		2
		 */

        System.out.println(6 | 3);// 7
		/*
		   110		6
		 | 011		3
		----------
		   111		7
		 */

        System.out.println(6 ^ 3);// 5
		/*
		   110		6
		 ^ 011		3
		----------
		   101		5
		 */

        System.out.println(~6);// 取反：-7，计算机都是以补码形式运算，故打印出来的是-7的补码形式
		/*
		   ~ 00000000 00000000 00000000 00000110		6的原码，反码，补码都是本身
		     11111111 11111111 11111111 11111001		对6取反，最高位1是负数-7的补码形式
		   - 00000000 00000000 00000000 00000001		补码减去1可以得到反码
		 ----------------------------------------
			 11111111 11111111 11111111 11111000		反码，除符号位外，逐位取反得到原码
			 10000000 00000000 00000000 00000111		原码（-7）

			 计算机都是以补码形式运算，故打印出来的是-7的补码形式，也就是：
			 11111111 11111111 11111111 11111001

		 */

    }

}
